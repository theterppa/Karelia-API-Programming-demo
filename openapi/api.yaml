openapi: 3.1.0
info:
  title: My API! - OpenAPI 3.0
  description: |-
    My API btw!
    
    
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io

security:
  - bearerAuth: []
  
servers:
  - url: http://localhost:3000/

tags:
  - name: Sample dataset
    description: Something
    externalDocs:
      description: Find more
      url: https://m.karelia.fi

paths:
  /data: 
    get:
      tags:
        - Sample dataset
      summary: Return a dataset
      description: Returns a dataset
      responses:
        '200':
          description: Succesful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Data'
        '415':
          description: Unsupported mediatype
  /id: 
    get:
      tags:
        - Sample dataset
      summary: Get dataset with id
      description: Return a dataset based on that id
      responses:
        '200':
          description: Succesful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Data'
        '415':
          description: Unsupported mediatype
  /: 
    post:
      tags:
        - Post dataset
      summary: Post data into database
      description: Post data into database
      responses:
        '200':
          description: Succesful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Data'
        '409':
          description: Record already exists 
  /login:
    post:
      tags:
        - Authentication
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Logged in succesfully  
        '401':
          description: Wrong username or password  



  
components:
  schemas:
    Data:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 111
        forename:
          type: string
          example: Joku
        surname:
          type: string
          example: Mies

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT